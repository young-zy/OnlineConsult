-- MySQL Script generated by MySQL Workbench
-- Thu Dec 12 14:48:33 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema consult
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `consult` ;

-- -----------------------------------------------------
-- Schema consult
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `consult` DEFAULT CHARACTER SET utf8mb4 ;
USE `consult` ;

-- -----------------------------------------------------
-- Table `consult`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consult`.`user` ;

CREATE TABLE IF NOT EXISTS `consult`.`user` (
  `uid` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `hashed_password` VARCHAR(150) NOT NULL,
  `authority` VARCHAR(45) NOT NULL DEFAULT 'student' COMMENT '权限',
  `msg_num` INT NULL DEFAULT 0 COMMENT '消息数量',
  PRIMARY KEY (`uid`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `consult`.`department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consult`.`department` ;

CREATE TABLE IF NOT EXISTS `consult`.`department` (
  `department_id` INT NOT NULL COMMENT 'department id',
  `department_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`department_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `consult`.`course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consult`.`course` ;

CREATE TABLE IF NOT EXISTS `consult`.`course` (
  `department_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `cname` VARCHAR(45) CHARACTER SET 'utf8mb4' NOT NULL COMMENT '课程名字',
  PRIMARY KEY (`department_id`, `course_id`),
  UNIQUE INDEX `cname_UNIQUE` (`cname` ASC) VISIBLE,
  INDEX `fk_course_department_idx` (`department_id` ASC) VISIBLE,
  CONSTRAINT `fk_course_department`
    FOREIGN KEY (`department_id`)
    REFERENCES `consult`.`department` (`department_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `consult`.`question`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consult`.`question` ;

CREATE TABLE IF NOT EXISTS `consult`.`question` (
  `department_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `question_id` INT NOT NULL COMMENT 'question id',
  `question_uid` INT NOT NULL,
  `question_title` VARCHAR(45) CHARACTER SET 'utf8mb4' NOT NULL COMMENT '问题标题',
  `question_content` MEDIUMTEXT CHARACTER SET 'utf8mb4' NOT NULL COMMENT '问题内容',
  `answer_uid` INT NULL COMMENT '回答者uid',
  `answer_content` MEDIUMTEXT CHARACTER SET 'utf8mb4' NULL COMMENT '回答内容',
  `create_time` DATETIME NULL,
  PRIMARY KEY (`department_id`, `course_id`, `question_id`),
  INDEX `fk_question_user1_idx` (`question_uid` ASC) VISIBLE,
  INDEX `fk_question_user2_idx` (`answer_uid` ASC) VISIBLE,
  INDEX `fk_question_course1_idx` (`department_id` ASC, `course_id` ASC) VISIBLE,
  CONSTRAINT `fk_question_user1`
    FOREIGN KEY (`question_uid`)
    REFERENCES `consult`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_user2`
    FOREIGN KEY (`answer_uid`)
    REFERENCES `consult`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_course1`
    FOREIGN KEY (`department_id` , `course_id`)
    REFERENCES `consult`.`course` (`department_id` , `course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `consult`.`teaches`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consult`.`teaches` ;

CREATE TABLE IF NOT EXISTS `consult`.`teaches` (
  `department_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `uid` INT NOT NULL,
  PRIMARY KEY (`department_id`, `course_id`, `uid`),
  INDEX `fk_course_has_user_user1_idx` (`uid` ASC) VISIBLE,
  INDEX `fk_course_has_user_course1_idx` (`department_id` ASC, `course_id` ASC) VISIBLE,
  CONSTRAINT `fk_course_has_user_course1`
    FOREIGN KEY (`department_id` , `course_id`)
    REFERENCES `consult`.`course` (`department_id` , `course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_course_has_user_user1`
    FOREIGN KEY (`uid`)
    REFERENCES `consult`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `consult`.`message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `consult`.`message` ;

CREATE TABLE IF NOT EXISTS `consult`.`message` (
  `message_id` INT NOT NULL AUTO_INCREMENT,
  `department_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `question_id` INT NOT NULL,
  `user_uid` INT NOT NULL,
  `message_title` VARCHAR(45) NOT NULL,
  `is_acknowledged` TINYINT(1) NULL DEFAULT 0 COMMENT '已读',
  PRIMARY KEY (`message_id`),
  INDEX `fk_message_user1_idx` (`user_uid` ASC) VISIBLE,
  INDEX `fk_message_question1_idx` (`department_id` ASC, `course_id` ASC, `question_id` ASC) VISIBLE,
  CONSTRAINT `fk_message_user1`
    FOREIGN KEY (`user_uid`)
    REFERENCES `consult`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_question1`
    FOREIGN KEY (`department_id` , `course_id` , `question_id`)
    REFERENCES `consult`.`question` (`department_id` , `course_id` , `question_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `consult`;

DELIMITER $$

USE `consult`$$
DROP TRIGGER IF EXISTS `consult`.`course_BEFORE_INSERT` $$
USE `consult`$$
CREATE DEFINER = CURRENT_USER TRIGGER `consult`.`course_BEFORE_INSERT` BEFORE INSERT ON `course` FOR EACH ROW
BEGIN
    set new.course_id=(select ifnull(max(course_id)+1,1) from course where course.department_id = new.department_id);
END$$


USE `consult`$$
DROP TRIGGER IF EXISTS `consult`.`question_BEFORE_INSERT` $$
USE `consult`$$
CREATE DEFINER = CURRENT_USER TRIGGER `consult`.`question_BEFORE_INSERT` BEFORE INSERT ON `question` FOR EACH ROW
BEGIN
    set new.question_id=(select ifnull(max(question_id)+1,1) from question where question.department_id = new.department_id AND question.course_id = new.course_id);
    set new.create_time=now();
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
